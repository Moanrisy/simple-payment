definitions:
  model.Bank:
    properties:
      created_at:
        example: 2009-11-10 23:00:00 +0000 UTC m=+0.000000001
        type: string
      email:
        example: johndoe@mail.com
        type: string
      id:
        example: 1
        type: integer
      name:
        example: John Doe
        type: string
    type: object
  model.Customer:
    properties:
      created_at:
        example: 2009-11-10 23:00:00 +0000 UTC m=+0.000000001
        type: string
      email:
        example: johndoe@mail.com
        type: string
      id:
        example: 1
        type: integer
      name:
        example: John Doe
        type: string
    type: object
  model.Merchant:
    properties:
      created_at:
        example: 2009-11-10 23:00:00 +0000 UTC m=+0.000000001
        type: string
      email:
        example: johndoe@mail.com
        type: string
      id:
        example: 1
        type: integer
      name:
        example: John Doe
        type: string
    type: object
  model.Payment:
    properties:
      created_at:
        example: 2009-11-10 23:00:00 +0000 UTC m=+0.000000001
        type: string
      email:
        example: johndoe@mail.com
        type: string
      id:
        example: 1
        type: integer
      name:
        example: John Doe
        type: string
    type: object
info:
  contact: {}
  title: Simple Payment API
paths:
  /api/banks:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Bank'
      summary: Get all banks
      tags:
      - bank
    post:
      responses:
        "200":
          description: OK
      summary: Create new bank
      tags:
      - bank
  /api/banks/{id}:
    delete:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Bank'
      summary: Delete bank by ID
      tags:
      - bank
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Bank'
      summary: Get bank by ID
      tags:
      - bank
  /api/banks/id:
    put:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Bank'
      summary: Update bank by ID
      tags:
      - bank
  /api/customers:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Customer'
      summary: Get all customers
      tags:
      - customer
    post:
      responses:
        "200":
          description: OK
      summary: Create new customer
      tags:
      - customer
  /api/customers/{id}:
    delete:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Customer'
      summary: Delete customer by ID
      tags:
      - customer
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Customer'
      summary: Get customer by ID
      tags:
      - customer
  /api/customers/id:
    put:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Customer'
      summary: Update customer by ID
      tags:
      - customer
  /api/merchants:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Merchant'
      summary: Get all merchants
      tags:
      - merchant
    post:
      responses:
        "200":
          description: OK
      summary: Create new merchant
      tags:
      - merchant
  /api/merchants/{id}:
    delete:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Merchant'
      summary: Delete merchant by ID
      tags:
      - merchant
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Merchant'
      summary: Get merchant by ID
      tags:
      - merchant
  /api/merchants/id:
    put:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Merchant'
      summary: Update merchant by ID
      tags:
      - merchant
  /api/payments:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Payment'
      summary: Get all payments
      tags:
      - payment
    post:
      responses:
        "200":
          description: OK
      summary: Create new payment
      tags:
      - payment
  /api/payments/{id}:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Payment'
      summary: Get payment by ID
      tags:
      - payment
swagger: "2.0"
