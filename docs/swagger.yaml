definitions:
  model.Customer:
    properties:
      balance:
        type: integer
      created_at:
        type: string
      customer_id:
        type: string
      name:
        type: string
      user_id:
        type: string
    type: object
  model.CustomerRequest:
    properties:
      name:
        example: John Doe
        type: string
      user_id:
        example: "1"
        type: string
    type: object
  model.CustomerResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  model.Merchant:
    properties:
      balance:
        type: string
      created_at:
        type: string
      merchant_id:
        type: string
      name:
        type: string
      user_id:
        type: string
    type: object
  model.MerchantRequest:
    properties:
      name:
        example: John Doe store
        type: string
      user_id:
        example: "1"
        type: string
    type: object
  model.MerchantResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  model.TopUpRequest:
    properties:
      balance:
        example: 50000
        type: integer
      customer_id:
        example: "1"
        type: string
    type: object
info:
  contact: {}
  title: Simple Payment API
paths:
  /api/customers:
    get:
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.CustomerResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Customer'
                  type: array
              type: object
      summary: Get all customers
      tags:
      - customer
    post:
      parameters:
      - description: Customer
        in: body
        name: string
        required: true
        schema:
          $ref: '#/definitions/model.CustomerRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CustomerResponse'
        "400":
          description: Bad Request
      summary: Create new customer
      tags:
      - customer
  /api/customers/{id}:
    delete:
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: Delete customer by ID
      tags:
      - customer
    get:
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Customer'
      summary: Get customer by ID
      tags:
      - customer
  /api/customers/id:
    put:
      parameters:
      - description: TopUp
        in: body
        name: object
        required: true
        schema:
          allOf:
          - $ref: '#/definitions/model.TopUpRequest'
          - properties:
              balance:
                type: integer
            type: object
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Customer'
      summary: Topup customer by ID
      tags:
      - customer
  /api/merchants:
    get:
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.MerchantResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Merchant'
                  type: array
              type: object
      summary: Get all merchants
      tags:
      - merchant
    post:
      parameters:
      - description: Merchant
        in: body
        name: string
        required: true
        schema:
          $ref: '#/definitions/model.MerchantRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MerchantResponse'
        "400":
          description: Bad Request
      summary: Create new merchant
      tags:
      - merchant
  /api/merchants/{id}:
    delete:
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: Delete merchant by ID
      tags:
      - merchant
    get:
      parameters:
      - description: Merchant ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Merchant'
      summary: Get merchant by ID
      tags:
      - merchant
swagger: "2.0"
